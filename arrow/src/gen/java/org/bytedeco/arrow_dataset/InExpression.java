// Targeted by JavaCPP version 1.5.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.arrow_dataset;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.arrow.*;
import static org.bytedeco.arrow.global.arrow.*;
import org.bytedeco.parquet.*;
import static org.bytedeco.arrow.global.parquet.*;

import static org.bytedeco.arrow.global.arrow_dataset.*;


@Namespace("arrow::dataset") @NoOffset @Properties(inherit = org.bytedeco.arrow.presets.arrow_dataset.class)
public class InExpression extends InExpressionImpl {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public InExpression(Pointer p) { super(p); }

  public InExpression(@SharedPtr @ByVal Expression operand, @SharedPtr @Cast({"", "std::shared_ptr<arrow::Array>"}) Array set) { super((Pointer)null); allocate(operand, set); }
  private native void allocate(@SharedPtr @ByVal Expression operand, @SharedPtr @Cast({"", "std::shared_ptr<arrow::Array>"}) Array set);

  public native @StdString String ToString();

  public native @ByVal DataTypeResult Validate(@Const @ByRef Schema schema);

  public native @SharedPtr @ByVal Expression Assume(@Const @ByRef Expression given);

  /** The set against which the operand will be compared */
  public native @SharedPtr @Cast({"", "std::shared_ptr<arrow::Array>"}) Array set();
}
